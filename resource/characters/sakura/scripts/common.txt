// 全パターン共通辞書


// 起動時
$OnBoot
{
{$init}
{$if ({$FirstMessageSent} == true) {{$OnBoot_default}} else {{$sendFirstMessage}}}
}


// ログイン時
$OnLogin
{$if ({$connecting} == true) {{$alreadyConnected}} else {{$OnLogin_default}}}


// 正常にログインした
$OnConnect
{
{$ServerName = {$parameter(0)}}
{$OnConnect_default}
}


// 鯖との接続が切れた
$OnDisconnect
{
{$OnDisconnect_default}
{$ServerName = "サーバ"}
}


//DOSコマンド系の{$parameter(0)}からDOSコマンド名を抽出
$ExtractCommandName
{
{@idx = {$index(" ",{$parameter(0)})}}
{$if ({@idx} > 0) {{$substringl({$parameter(0)},{@idx})}} else { {$parameter(0)} } }
}


//ファイルパスを引数にとるコマンドの{$parameter(0)}からファイル名を抽出
//パスが\で終わるとバグるかも
$ExtractFileName
{
{@idx1 = {$lastindex(\\,{$parameter(0)})}}
{@idx2 = {$lastindex("/",{$parameter(0)})}}
{$if ({@idx1} > {@idx2}) {{$substringr({$parameter(0)},{$length({$parameter(0)})}-{@idx1}-2)}} elseif({@idx1} < {@idx2}) {{$substringr({$parameter(0)},{$length({$parameter(0)})}-{@idx2}-1)}} else {{$parameter(0)}}}
}


// ディレクトリ移動失敗
$OnChangeDirectoryFailure
{
{@value = {$getValue}}
{$if ({@value} == 11) { {$NoSuchDirectory_tsun} } elseif ({@value} == 1) { {$OnChangeDirectoryFailure_tsun_default} } elseif ({@value} == 15) { {$NoSuchDirectory_normal} } elseif ({@value} == 5) { {$OnChangeDirectoryFailure_normal_default} } elseif ({@value} == 19) { {$NoSuchDirectory_dere} } elseif ({@value} == 9) { {$OnChangeDirectoryFailure_dere_default} } }
}


// ファイル表示失敗
$OnOpenFileFailure
{
{@value = {$getValue}}
{$if ({@value} == 11) { {$NoSuchFile_tsun} } elseif ({@value} == 1) { {$OnOpenFileFailure_tsun_default} } elseif ({@value} == 15) { {$NoSuchFile_normal} } elseif ({@value} == 5) { {$OnOpenFileFailure_normal_default} } elseif ({@value} == 19) { {$NoSuchFile_dere} } elseif ({@value} == 9) { {$OnOpenFileFailure_dere_default} } }
}


// ファイル実行失敗
$OnExecuteFileFailure
{
{@value = {$getValue}}
{$if ({@value} == 11) { {$NoSuchFile_tsun} } elseif ({@value} == 1) { {$OnExecuteFileFailure_tsun_default} } elseif ({@value} == 15) { {$NoSuchFile_normal} } elseif ({@value} == 5) { {$OnExecuteFileFailure_normal_default} } elseif ({@value} == 19) { {$NoSuchFile_dere} } elseif ({@value} == 9) { {$OnExecuteFileFailure_dere_default} } }
}


//ファイルを閉じる失敗
$OnCloseFileFailure
{$if ({$tsunderelevel} <= 5) { {$if ({$tsunderelevel} > {$random(4)} + 1) { {$OnCloseFileFailure_normal} } else { {$OnCloseFileFailure_tsun} } } } else { {$if ({$tsunderelevel} > {$random(4)} + 5) { {$OnCloseFileFailure_dere} } else { {$OnCloseFileFailure_normal} } } } }


// ファイル削除失敗
$OnDeleteFileFailure
{
{@value = {$getValue}}
{$if ({@value} == 11) { {$NoSuchFile_tsun} } elseif ({@value} == 1) { {$OnDeleteFileFailure_tsun_default} } elseif ({@value} == 15) { {$NoSuchFile_normal} } elseif ({@value} == 5) { {$OnDeleteFileFailure_normal_default} } elseif ({@value} == 19) { {$NoSuchFile_dere} } elseif ({@value} == 9) { {$OnDeleteFileFailure_dere_default} } }
}


//ファイル受信失敗
$OnDownloadFailure
{
{@value = {$getValue}}
{$if ({@value} == 11) { {$NoSuchFile_tsun} } elseif ({@value} == 1) { {$OnDownloadFailure_tsun_default} } elseif ({@value} == 21) { {$OnDownloadFailure_tsun_cancel} } elseif ({@value} == 15) { {$NoSuchFile_normal} } elseif ({@value} == 5) { {$OnDownloadFailure_normal_default} } elseif ({@value} == 25) { {$OnDownloadFailure_normal_cancel} } elseif ({@value} == 19) { {$NoSuchFile_dere} } elseif ({@value} == 9) { {$OnDownloadFailure_dere_default} } elseif ({@value} == 29) { {$OnDownloadFailure_dere_cancel} } }
}


//コマンド失敗時のリアクションの分類計算
//@value = 1:tsun, 5:normal, 9:dere
//         10:not exist, 0:unknown, 20:cancel(OnDownloadFailureのみ)
$getValue
{
{$if ({$tsunderelevel} <= 5) { {$if ({$tsunderelevel} > {$random(4)} + 1) { {@value = 5} } else { {@value = 1} } } } else { {$if ({$tsunderelevel} > {$random(4)} + 5) { {@value = 9} } else { {@value = 5} } } } }
{$if ({$parameter(1)} == "not exist") { {@value += 10} } elseif ({$parameter(1)} == "cancel") { {@value += 20} } elseif ({$parameter(1)} == "unknown") { {@value += 0} } else { {@value += 0} }}
{@value}
}


//時刻を12時間方式に変換
$getHalfHour
{
{$if ({$hour}>12) {{@h = {$hour}-12}} else {{@h = {$hour}}}}
{$if ({@h} == 0) {{@h = 12}}}
{@h}
}


//$OnUnknownCommandの引数からPrivateCommandを振り分ける
$parsePrivateCommand
{$if ({$thunderstorm} == true) {{$parsePrivateCommand_anger}} else {{$parsePrivateCommand_default}}}

$parsePrivateCommand_default
{
{@param = {$tolower({$parameter(0)})}}
{$if ({@param} == "終了" || {@param} == "exit") {{$Exit}} elseif ({@param} == "help") {{$help}} elseif ({@param} == "help -dos") {{$help_dos}} elseif ({@param} == "help -private") {{$help_private}} elseif ({@param} == "ぺったんこ") {{$OnSecretFileFound}} elseif ({$talk} != "") {{$talk}} elseif ({$connecting} == false) {{$OnDisconnecting}} elseif ({@param} == "いま何時？") { {$WhatTimeIsIt} } elseif ({@param} == "今日は何日？") {{$WhatDateIsIt}} elseif ({@param} == "リモートマシンをシャットダウン") {{$ShutdownServerPC}} else {{$OnUnknownCommand_default}}}
}

$parsePrivateCommand_anger
{
{@param = {$tolower({$parameter(0)})}}
{$if ({@param} == "終了" || {@param} == "exit") {{$Exit}} elseif ({@param} == "ゴメン") {{$ImSorry}} elseif ({$connecting} == false) {{$OnDisconnecting}} else {{$OnUnknownCommand_default}}}
}

//終了 - プライベートコマンド
$Exit
{$OnClose}\w7\-


//リモートマシンをシャットダウン - プライベートコマンド
//15歳以上専用
$ShutdownServerPC
{$if ({$age} >= 15) {{$if ({$allowoperate} == true) {{$ShutdownServerPCEnabled}} else {{$ShutdownServerPCDisabled}}}} else {{$OnCommandDisabled}}}



//グローバル変数の初期化
$init
{
{$ServerName = "サーバ"}
{$CommandName = {$array("di","ve","mk","rm","co","de","mo","re","cd","ty","ls","ch","cp","cl","xc","st")}}
{$CommandFullName = {$array("dir","ver","mkdir","rmdir\nrm","copy","del","move","ren","cd","type","ls","chdir","cp","cls","xcopy","start")}}
{$CommandAge = {$array(6,6,12,12,12,12,9,6,6,6,6,6,12,6,15,9)}}
{$MemorialDate = {$array("1月1日","1月7日","2月29日","3月3日","4月1日","5月5日","7月7日","9月9日","10月31日","12月25日","12月31日")}}
{$MemorialDesc = {$array("元旦","七草の日","うるう年","桃の節句","アタシの誕生日","端午の節句","七夕","菊の節句","ハロウィン","クリスマス","大晦日")}}
{$MemorialDesc_u12 = {$array("お正月","七草の日","うるう年","ひな祭り","アタシの誕生日","こどもの日","七夕","","ハロウィン","クリスマス","大みそか")}}
//気分状態 true:雷雨、false:晴れ
{$if ({$thunderstorm} == true && {$isTimeUp} == true) {{$thunderstorm = false}}}
}


//初回起動時のメッセージ
$sendFirstMessage
{
{$if ({$random(2)} == 0) {{$sendFirstMessage_normal}} else {{$sendFirstMessage_tsun}}}
{$FirstMessageSent = true}
}

$sendFirstMessage_tsun
%usernameじゃない。どうしたのよ。\nあーそうそう、アンタに伝言があったわ。いい？\n\n「さくらには標準コマンドのほかに、\n　いくつかのプライベートコマンドが用意されています。\n　くわしくは｢help｣コマンドにて。」\n\n……だそうよ。

$sendFirstMessage_normal
%username、何か用？\nあ、えーとね、%usernameに伝言だよ。いい？\n\n「さくらには標準コマンドのほかに、\n　いくつかのプライベートコマンドが用意されています。\n　くわしくは｢help｣コマンドにて。」\n\n……だって。


//プライベートコマンドの説明書き
$PrivateCommandMessage
「さくらの認識できるプライベートコマンドは\n　以下の通りです。\n\n　『いま何時？』\n　『今日は何日？』\n　『終了』 (『exit』)\n　『リモートマシンをシャットダウン』\n　『help』\n\n　……余談ですが、さくらがすねてしまったときは\n　素直に『ゴメン』ってあやまるのも手です。」\n


//DOSコマンドの年齢制限チェック
$isExecutable
{
{@cmd = {@argv[0]}}
{$for ({@i = 0};{@i} < {$count($CommandName)};{@i++}) { {$if ({@cmd} == {$CommandName[{@i}]}) {{@limit = {$CommandAge[{@i}]}}} } } }
{$if ({$age} >= {@limit}) {{@bool = true}} else {{@bool = false}}}
{@bool}
}


//実行可能なDOSコマンドの列挙
$listExecutableCommands
{
{@cmds = ""}
{$for ({@i = 0};{@i} < {$count($CommandName)};{@i++}) { {$if ($age >= {$CommandAge[{@i}]}) {{@cmds += "{$CommandFullName[{@i}]}\n"}} } } }
{@cmds}
}

//記念日検索
$getMemorialDay
{
{@date = "{$month}月{$day}日"}
{$for ({@i = 0};{@i} < {$count($MemorialDate)};{@i++}) { {$if ({@date} == {$MemorialDate[{@i}]}) {{@j = {@i}}} } } }
{$if ({$age} < 12) {{$MemorialDesc_u12[{@j}]}} else {{$MemorialDesc[{@j}]}}}
}


//ご機嫌斜めモードの最低継続期限設定
//現行では１分後に解除
//23:59以降は即時解除の可能性あり
$setTimeLimit
{
{@limit = {$hour}*3600 + {$minute}*60 + {$second} + 90}
{$if (@limit >= 86340) {{@limit -= 86340}}}
{$limitTime = {@limit}}
}


//ご機嫌斜めモード制限時間通過チェック
//通過後ならtrue
$isTimeUp
{
{@bool = false}
{@time = {$hour}*3600 + {$minute}*60 + {$second}}
{$if (@time >= {$limitTime}) {{@bool = true}}}
{@bool}
}


//ご機嫌斜め時の行動決定
$shiftStatus
{
{@p = {$random(5)}}
{$if ({@p} == 0) {{$destroy}} elseif ({@p} == 4 && {$isTimeUp} == true) {{$excuse}}}
}

$destroy
{$if ({$connecting} == true) {\r[disconnection]}}
\n{$OnClose}\-
{$if ({$allowoperate} == true) {\r[shutdown]} elseif ({$connecting} == true) {\r[disconnection]}}


//サーフェス切り替え
//@argv[1]:id最大値，@argv[0]:id最小値
$setSurfaceRange
{
{@id = {$random({@argv[1]} + 1 - {@argv[0]})} + {@argv[0]}}
\s[{@id}]
}